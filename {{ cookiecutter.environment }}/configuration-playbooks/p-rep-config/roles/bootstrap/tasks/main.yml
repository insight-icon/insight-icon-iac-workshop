- name: Check if grub is present
  stat: path=/etc/default/grub
  register: hasgrub

- block:
    - name: Disable IPv6 in grub
      replace:
        dest: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX="(.*)"'
        replace: 'GRUB_CMDLINE_LINUX="\1 ipv6.disable=1"'
        backup: yes
      notify:
        - grub2-mkconfig
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        ) and hasgrub.stat.exists and ipv6_grub_disable

#- name: "Disable ipv6"
#  commmand: sudo sed -i -e 's/GRUB_CMDLINE_LINUX_DEFAULT="maybe-ubiquity"/GRUB_CMDLINE_LINUX_DEFAULT="ipv6.disable=1 maybe-ubiquity"/' /etc/default/grub
#    sudo sed -i -e 's/GRUB_CMDLINE_LINUX=""/GRUB_CMDLINE_LINUX="ipv6.disable=1"/' /etc/default/grub
#    sudo update-grub
#    become: sudo

- name: "Create ext4 filesystem on the EBS data volume /dev/xvdf"
  filesystem:
    fstype: ext4
    dev: /dev/xvdf

- name: "Mount EBS data volume under data directory"
  mount:
    path: /home/ubuntu/data
    src: /dev/xvdf
    state: mounted
    fstype: ext4

- name: "Copy over the docker-compose file"
  copy:
    src: ../../../data/c1/docker-compose.yaml
    dest: /home/ubuntu/docker-compose.yaml
    mode: '0440'
    owner: "ubuntu"
    group: "ubuntu"

- name: "Copy over the nginx conf files"
  synchronize:
    src: ../../../data/c1/nginx
    dest: /home/ubuntu/

- name: "Start node application via docker-compose"
  docker_compose:
    project_src: /home/ubuntu
    state: present
